@using BooKeeperWebApp.Shared.Dtos.Bank;
@using BooKeeperWebApp.Shared.Dtos.Investment;
@using Client.Services.Investment;
@using Microsoft.AspNetCore.Components.Authorization;
@using BooKeeperWebApp.Shared;
@using Client.Services.Bank;

@inject BankAccountService _bankAccountService;
@inject InvestmentAccountService _investmentAccountService;
@inject AuthenticationStateProvider _authenticationStateProvider;

<RadzenPanelMenu Match="NavLinkMatch.Prefix">
    <AuthorizeView Roles=@Roles.ApplicationUsers>
        <Authorized>
            @if (_bankAccountService.Loading)
            {
                <RadzenPanelMenuItem Icon="credit_card" id="Loader">
                    <Template>
                        <RadzenLabel Text="Bank Accounts" />
                        <RadzenButton Variant="Variant.Text" IsBusy=true ButtonStyle="ButtonStyle.Light" />
                    </Template>
                </RadzenPanelMenuItem>
            }
            else
            {
                <RadzenPanelMenuItem Expanded=true Text="Bank accounts" Icon="credit_card" Path="BankAccounts">
                    @foreach (var account in _bankAccountService.Items)
                    {
                        <RadzenPanelMenuItem Text="@account.Name" Path=@GetBankAccountPath(account) />
                    }
                </RadzenPanelMenuItem>
            }            
            @if (_investmentAccountService.Loading)
            {
                <RadzenPanelMenuItem Icon="card_travel" id="Loader">
                    <Template>
                        <RadzenLabel Text="Investment Accounts" />
                        <RadzenButton Variant="Variant.Text" IsBusy=true ButtonStyle="ButtonStyle.Light" />
                    </Template>
                </RadzenPanelMenuItem>
            }
            else
            {
                <RadzenPanelMenuItem Expanded=true Text="Investment accounts" Icon="card_travel" Path="InvestmentAccounts">
                    @foreach (var account in _investmentAccountService.Items)
                    {
                        <RadzenPanelMenuItem Text="@account.Name" Path=@GetInvestmentAccountPath(account) />
                    }
                </RadzenPanelMenuItem>
            }
            <RadzenPanelMenuItem Text="Books" Icon="book" Path="Books" />
            <RadzenPanelMenuItem Text="Rules" Icon="list" Path="Rules" />
            <RadzenPanelMenuItem Text="Events" Icon="event" Path="Events" />
        </Authorized>
    </AuthorizeView>
</RadzenPanelMenu>

@code {
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        _bankAccountService.RefreshRequested += RefreshMe;
        _investmentAccountService.RefreshRequested += RefreshMe;
        _bankAccountService.LoadAsync();
        _investmentAccountService.LoadAsync();
    }

    public void Dispose()
    {
        _bankAccountService.RefreshRequested -= RefreshMe;
        _investmentAccountService.RefreshRequested -= RefreshMe;
    }

    private string GetBankAccountPath(BankAccountDto account)
    {
        return $"bankaccountdetails/{account.Id}";
    }

    private string GetInvestmentAccountPath(InvestmentAccountDto account)
    {
        return $"investmentaccountdetails/{account.Id}";
    }

    private void RefreshMe()
    {
        StateHasChanged();
    }
}