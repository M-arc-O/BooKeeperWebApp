@page "/investmentaccountdetails/{id}"
@using BooKeeperWebApp.Shared.Dtos.Investment;
@using BooKeeperWebApp.Shared.Enums;
@using Client.Components;
@using Client.Services.Investment;

@inject InvestmentAccountService _investmentAccountService
@inject InvestmentService _investmentService

<PageTitle>Account details @_investmentAccountService.Item?.Name</PageTitle>

<h2>@_investmentAccountService.Item?.Name</h2>

<div class="container-fluid h-100">
    <div class="row">
        <div class="col-3">
            <RadzenCard>
                <div class="row">
                    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Account information</RadzenText>
                </div>
                <div class="row">
                    <div class="col-md-7 align-items-center d-flex">
                        <RadzenLabel Text="Current amount:" />
                    </div>
                    <div class="col-md-5">
                        <RadzenTextBox style="width: 100%;" Name="CurrentAmount" Value="@($"€ {_investmentAccountService.Item?.CurrentAmount.ToString("F2")}")" Disabled="true" />
                    </div>
                </div>
            </RadzenCard>
        </div>
    </div>

    <hr />

    <Investment InvestmentAccount="@_investmentAccountService.Item" />
</div>

@code {
    [Parameter]
    public string? Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        _investmentAccountService.RefreshRequested += RefreshMe;
        _investmentService.RefreshRequested += LoadAccount;
    }

    protected override void OnParametersSet()
    {
        LoadAccount();
    }

    private async void LoadAccount()
    {
        await _investmentAccountService.GetById(Guid.Parse(Id!));
    }

    private void RefreshMe()
    {
        StateHasChanged();
    }
}