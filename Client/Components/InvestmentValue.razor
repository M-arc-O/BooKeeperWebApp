@using BooKeeperWebApp.Shared.Dtos.Investment;
@using Client.Services.Investment;

@inject InvestmentValueService _investmentValueService
@inject DialogService _dialogService

<RadzenTemplateForm TItem="Model" Data=@newModel Submit=@OnSubmit>
    <div class="row">
        <div class="col-5">
            <RadzenDatePicker Name="@($"{Investment?.Id}Date")" @bind-Value=newModel.Date DateFormat="d" />
            <RadzenRequiredValidator Component="@($"{Investment?.Id}Date")" Text="Date is required" Popup=true Style="position: absolute" />
        </div>
        <div class="col-5">
            <RadzenNumeric Name="@($"{Investment?.Id}Value")" Placeholder="Enter value" @bind-Value=newModel.Value TValue="double" Step="0.5" />
            <RadzenRequiredValidator Component="@($"{Investment?.Id}Value")" Text="Value is required" Popup=true Style="position: absolute" />
        </div>
        <div class="col-2">
            <RadzenButton IsBusy=@(_investmentValueService.Creating || _investmentValueService.Deleting)
                          ButtonType="ButtonType.Submit"
                          Icon="check"
                          ButtonStyle="ButtonStyle.Success"
                          Variant="Variant.Flat"
                          Size="ButtonSize.Medium" />
        </div>
    </div>
</RadzenTemplateForm>

<div class="row">
    <RadzenDataList WrapItems="true" AllowPaging="true" Data="@Investment?.Values.OrderByDescending(x => x.Date)" TItem="InvestmentValueDto" 
        PageSize="4" 
        PagerHorizontalAlign="HorizontalAlign.Left" 
        ShowPagingSummary="false">
        <Template Context="value">
            <div class="container">
                <div class="row">
                    <div class="col">
                        <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" class="mb-0">Date</RadzenText>
                        <RadzenText TextStyle="TextStyle.Body2" class="mb-sm-2 mb-lg-0">@(value.Date.ToString("dd-MM-yyyy")) </RadzenText>
                    </div>
                    <div class="col">
                        <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" class="mb-0">Value</RadzenText>
                        <RadzenText TextStyle="TextStyle.Body2" class="mb-sm-2 mb-lg-0">@(value.Value.ToString("N2")) </RadzenText>
                    </div>
                    <div class="col">
                        <RadzenButton IsBusy=@(_investmentValueService.Creating || _investmentValueService.Deleting)
                                      Click=@(() => OnDeleteClick(value.Id))
                                      Icon="delete"
                                      ButtonStyle="ButtonStyle.Danger"
                                      Variant="Variant.Flat"
                                      Size="ButtonSize.Medium" />
                    </div>
                </div>
            </div>
        </Template>
    </RadzenDataList>
</div>

@code {
    class Model
    {
        public DateTime Date { get; set; } = DateTime.Now;
        public double Value { get; set; }
    }

    [Parameter]
    public InvestmentDto? Investment { get; set; }

    private Model newModel = new();

    protected override void OnParametersSet()
    {
        _investmentValueService.Items = Investment?.Values?.ToList()!;
    }

    private async Task OnSubmit(Model model)
    {
        var result = await _investmentValueService.CreateInvestmentValueAsync(Investment!.Id, model.Date, model.Value);

        if (result)
        {
            newModel = new();
        }
    }

    private async Task OnDeleteClick(Guid id)
    {
        var confirmResult = await _dialogService.Confirm(
                    $"Are you sure you want to delete this value?",
                    "Warning!",
                    new ConfirmOptions() { OkButtonText = "Yes", CancelButtonText = "No", Style = "" });

        if (confirmResult.HasValue && confirmResult.Value)
        {
            await _investmentValueService.DeleteAsync(id);
        }
    }
}