name: BooKeeper Azure Static Web Apps CI/CD

env:
  KV_NAME: bookeeper-kv
  DB_SERVER_NAME: BooKeeper-dbs

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  # deploy_resources_job:
  #   if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
  #   runs-on: ubuntu-latest
  #   name: Deploy Azure Resources
  #   steps:
  #     - uses: actions/checkout@main
  #     - name: azure login
  #       uses: azure/login@v1
  #       with:
  #         creds: ${{ secrets.AZURE_SP_CREDENTIALS }}
  #     - name: deploy bicep file
  #       uses: azure/arm-deploy@v1
  #       with:
  #         subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #         resourceGroupName: ${{ secrets.AZURE_RESOURCE_GROUP_NAME }}
  #         template: ./Bicep/main.bicep
  #         parameters: ./Bicep/main.parameters.json adminLoginName=${{ secrets.AZURE_DB_ADMIN_NAME }} adminLoginPassword=${{ secrets.AZURE_DB_ADMIN_PASSWORD }}
  #         failOnStdErr: false

  build_and_deploy_job:
  #  needs: deploy_resources_job
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_SP_CREDENTIALS }}
      - uses: Azure/get-keyvault-secrets@v1
        with:
          keyvault: "bookeeper-kv"
          secrets: "webAppApiKey, dbConnectionString"
        id: myGetSecretAction  
      - name: Public IP
        id: ip
        uses: haythem/public-ip@v1.3

      - name: Add IP to database whitelist
        uses: azure/CLI@v1
        with:
          azcliversion: 2.42.0
          inlineScript: |
            az sql server firewall-rule create --resource-group rg-bookeeper --server BooKeeper-dbs --name PipelineRule --start-ip-address ${{ steps.ip.outputs.ipv4 }} --end-ip-address ${{ steps.ip.outputs.ipv4 }}
      - name: Build Migration project
        working-directory: ./BooKeeperWebApp.Database.Migration
        run: dotnet build --configuration Release
      # - name: script
      #   run: bash ./Scripts/FolderTree.sh ./
      - name: Migrate database
        working-directory: ./BooKeeperWebApp.Database.Migration
        env:
          ConnectionStrings:DefaultConnection: ${{ steps.myGetSecretAction.outputs.dbConnectionString }}
        run: dotnet run
      # - name: Build And Deploy
      #   id: builddeploy
      #   uses: Azure/static-web-apps-deploy@v1
      #   with:
      #     azure_static_web_apps_api_token: ${{ steps.myGetSecretAction.outputs.webAppApiKey }}
      #     repo_token: ${{ secrets.GITHUB_TOKEN }}
      #     action: "upload"
      #     app_location: "Client"
      #     api_location: "Api"
      #     output_location: "wwwroot"

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_SP_CREDENTIALS }}
      - uses: Azure/get-keyvault-secrets@v1
        with:
          keyvault: "bookeeper-kv"
          secrets: "webAppApiKey"
        id: myGetSecretAction
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ steps.myGetSecretAction.outputs.webAppApiKey }}
          action: "close"
